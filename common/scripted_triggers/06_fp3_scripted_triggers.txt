fp3_should_use_iranian_graphics_trigger = {
	culture = { has_building_gfx = iranian_building_gfx }
}

eligible_for_fp3_khvarenah_legacy_trigger = {
	has_fp3_dlc_trigger = yes
	dynasty = {
		OR = {
			AND = {
				dynast = {
					is_ruler = yes
					government_has_flag = government_is_clan
				}
			}
			has_dynasty_perk = fp3_khvarenah_legacy_1
		}
	}
}

#fp3_warrior_culture_trigger = { 
#	AND = {
#		OR = {
#			has_cultural_pillar = ethos_bellicose
#			has_cultural_tradition = tradition_swords_for_hire
#		}
#		OR = {
#			has_cultural_pillar = heritage_iranian
#			has_cultural_pillar = heritage_arabic
#			has_cultural_pillar = heritage_turkic
#			has_cultural_pillar = heritage_tocharian
#		}
#	}
#}

fp3_custom_divinity_for_zoroastrianism_faiths = {
	always = no
}

fp3_sufism_enthusiast_trigger = {
	always = no
}

# Used for speeding-up debug. Has little to no impact on performance, does not cause errors, or affect player experience.
is_developer_testing_trigger = {
	is_ai = no
	debug_only = yes
	has_multiple_players = no
}

fp3_will_remain_in_caliphate_regardless_of_takeover = {
	always = no
}
		
fp3_eligible_for_yearly_events_trigger = {
	always = no
}

fp3_is_valid_futuwaa_member = {
	$SPONSOR$.capital_province ?= { this = prev.location } # Prevents error log errors from dumbo AI
	is_ai = yes # TODO_CD_EREN: Allow players to benefit too (requires sending them interface messages that their skills have increased)
	age > 12
	age < 25
	is_married = no
	can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = $SPONSOR$ }
}

fp3_is_valid_madrasa_pupil = {
	$SPONSOR$.capital_province ?= { this = prev.location } # Prevents error log errors from dumbo AI
	is_ai = yes # TODO_CD_EREN: Allow players to benefit too (see above)
	age > 8
	age < 16
	NOT = { has_character_flag = studying_at_university }
	#Gender rules
	OR = {
		$SPONSOR$ = { has_realm_law = equal_law }
		AND = {
			$SPONSOR$ = {
				OR = {
					has_realm_law = female_only_law
					has_realm_law = female_preference_law
				}
			}
			is_female = yes
		}
		AND = {
			$SPONSOR$ = {
				OR = {
					has_realm_law = male_only_law
					has_realm_law = male_preference_law
				}
			}
			is_male = yes
		}
	}
}

fp3_valid_shia_head = {
	always = no
}

fp3_valid_muhakkima_head = {
	always = no
}

fp3_does_this_player_care_about_the_persian_struggle = {
	always = no
}

fp3_reward_from_vassalization_ending = {
	always = no
}

fp3_struggle_involves_one_supporter_and_one_detractor = {
	always = no
}

fp3_struggle_scoped_is_the_arabian_caliph_trigger = {
	always = no
}

fp3_fortress_of_faith_county_trigger = {
	faith = { save_temporary_scope_as = compare_faith }
	root.faith = { 
		faith_hostility_level = { 
			target = scope:compare_faith
			value < faith_evil_level
		}
	}
}

fp3_is_valid_loyal_puppet = { # Install a suitable lackey to do your bidding
	always = no
}

fp3_proper_gender_for_dynastic_ambition_trigger = {
	OR = { #checking for appropriate gender
		AND = {
			root = {
				OR = {
					has_realm_law = male_preference_law
					has_realm_law = male_only_law
				}
			}
			is_male = yes
		}
		AND = {
			root = {
				OR = {
					has_realm_law = female_preference_law
					has_realm_law = female_only_law
				}
			}
			is_female = yes
		}
		AND = {
			root = { has_realm_law = equal_law }
			OR = {
				is_female = yes
				is_male = yes
			}
		}
	}
}

fp3_character_any_involvement_persian_struggle_trigger = {
	always = no
}

fp3_character_involved_in_struggle_trigger = {
	always = no
}

fp3_character_interloper_in_struggle_trigger = {
	always = no
}

fp3_character_uninvolved_in_struggle_trigger = {
	always = no
}

fp3_struggle_is_the_caliph = {
	always = no
}

fp3_embellish_capital_decision_character_trigger = {
	is_capable_adult_ai = yes
	is_imprisoned = no
	is_healthy = yes 
	NOR = { 
		has_relation_rival = root 
		is_vassal_of = root
	}
}

fp3_name_read_in_friday_prayer_decision_liege_requirements_trigger = {
	OR = {
		is_independent_ruler = yes
		custom_description = {
			text = name_read_in_friday_prayer_crown_authority
			is_independent_ruler = no
			liege ?= { has_realm_law = crown_authority_0  }
		}
		# We have to trigger_if this for tooltip reasons.
		trigger_if = {
			limit = { is_independent_ruler = no }
			liege = { government_has_flag = government_is_tribal }
		}
	}
}

favour_skilled_outsiders_decision_valid_character_to_take_trigger = {
	OR = {
		has_perk = meritocracy_perk
		government_has_flag = government_is_clan
		culture = { has_cultural_pillar = ethos_egalitarian }
		calc_true_if = {
			amount >= 2
			has_trait = calm
			has_trait = humble
			has_trait = ambitious
		}
	}
}

favour_skilled_outsiders_decision_valid_county_to_generate_trigger = {
	culture = {
		# We don't technically need a custom tooltip for this, but the formatting looks much nicer.
		custom_tooltip = {
			text = favour_skilled_outsiders_decision.tt.not_share_your_heritage
			NOT = { has_same_culture_heritage = root.culture }
		}
		trigger_if = {
			limit = { exists = root.cp:councillor_chancellor }
			custom_tooltip = {
				text = favour_skilled_outsiders_decision.tt.not_share_chancellor_heritage
				NOT = { has_same_culture_heritage = root.cp:councillor_chancellor.culture }
			}
		}
		trigger_if = {
			limit = { exists = root.cp:councillor_marshal }
			custom_tooltip = {
				text = favour_skilled_outsiders_decision.tt.not_share_marshal_heritage
				NOT = { has_same_culture_heritage = root.cp:councillor_marshal.culture }
			}
		}
		trigger_if = {
			limit = { exists = root.cp:councillor_steward }
			custom_tooltip = {
				text = favour_skilled_outsiders_decision.tt.not_share_steward_heritage
				NOT = { has_same_culture_heritage = root.cp:councillor_steward.culture }
			}
		}
		trigger_if = {
			limit = { exists = root.cp:councillor_spymaster }
			custom_tooltip = {
				text = favour_skilled_outsiders_decision.tt.not_share_spymaster_heritage
				NOT = { has_same_culture_heritage = root.cp:councillor_spymaster.culture }
			}
		}
		trigger_if = {
			limit = { exists = root.cp:councillor_court_chaplain }
			custom_tooltip = {
				text = favour_skilled_outsiders_decision.tt.not_share_court_chaplain_heritage
				NOT = { has_same_culture_heritage = root.cp:councillor_court_chaplain.culture }
			}
		}
		trigger_if = {
			limit = {
				root = { is_independent_ruler = no }
			}
			custom_tooltip = {
				text = favour_skilled_outsiders_decision.tt.not_share_liege_heritage
				save_temporary_scope_as = culture_temp
				NOT = {
					root = {
						any_liege_or_above = {
							culture = { has_same_culture_heritage = scope:culture_temp }
						}
					}
				}
			}
		}
	}
}

favour_skilled_outsiders_decision_grab_courtlies_trigger = {
	OR = {
		NOT = { exists = scope:outsider_select }
		NOT = {
			culture = { has_same_culture_heritage = scope:outsider_select.culture }
		}
	}
	has_vassal_stance = courtly
}

favour_skilled_outsiders_decision_grab_landless_councillors_trigger = {
	OR = {
		NOT = { exists = scope:outsider_select }
		NOT = {
			culture = { has_same_culture_heritage = scope:outsider_select.culture }
		}
	}
	is_landed = no
}

favour_skilled_outsiders_decision_non_courtlies_trigger = {
	OR = {
		NOT = { exists = scope:outsider_select }
		NOT = {
			culture = { has_same_culture_heritage = scope:outsider_select.culture }
		}
	}
	NOT = { has_vassal_stance = courtly }
}

has_clan_succession_law = {
	is_ruler = yes
	OR = {
		has_realm_law = clan_antagonistic_partition_succession_law
		has_realm_law = clan_competitive_partition_succession_law
		has_realm_law = clan_impassive_partition_succession_law
		has_realm_law = clan_friendly_partition_succession_law
		has_realm_law = clan_harmonious_partition_succession_law
	}
}
