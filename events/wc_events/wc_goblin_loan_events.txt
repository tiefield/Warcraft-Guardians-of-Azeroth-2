namespace = goblin_loan

#To loan money from goblins
scripted_effect set_up_loan_goblin_effect = {
	set_variable = {
		name = original_debtor
		value = root
	}
	set_variable = {
		name = loan_amount_owed_goblins
		value = $AMOUNT$
	}
	#four payments in future
	set_variable = {
		name = loan_quarters_paid
		value = 0
	}
	$LENDER$ = { #To make the loan inheritable
		hidden_effect = {
			pay_short_term_gold = {
				target = root
				gold = $AMOUNT$
			}
 		}
	}
}

#You get a loan from goblin bankers
goblin_loan.200 = {
	type = letter_event
	opening = {
		desc = call_ally.0100.opening
	}
	desc = goblin_loan.200.desc
	sender = scope:recipient

	option = {
		name = goblin_loan.200.a
		show_as_tooltip = {
			scope:recipient = {
				pay_short_term_gold = {
					target = root
					gold = root.holy_order_gold_value
				}
			}
		}
		set_up_loan_goblin_effect = {
			LENDER = scope:recipient
			AMOUNT = root.holy_order_gold_value
		}
		scope:recipient = {
			add_character_flag = {
				flag = defend_four_years
				years = 4
			}
		}
		ai_chance = {
			base = 5
		}
	}
	option = {
		name = goblin_loan.200.b
		trigger = {
			highest_held_title_tier >= tier_kingdom
		}
		show_as_unavailable = {
			highest_held_title_tier >= tier_kingdom
			title:k_goblin_bankers.holder = {
				gold < root.goblin_big_loan_gold_value
			}
		}
		show_as_tooltip = {
			scope:recipient = {
				pay_short_term_gold = {
					target = root
					gold = root.goblin_big_loan_gold_value
				}
			}
		}
		set_up_loan_goblin_effect = {
			LENDER = scope:recipient
			AMOUNT = root.goblin_big_loan_gold_value
		}
		scope:recipient = {
			add_character_flag = {
				flag = defend_four_years
				years = 4
			}
		}
		ai_chance = {
			base = 5
			modifier = {
				add = 20
				has_trait = greedy
			}
		}
	}
	option = {
		name = goblin_loan.200.c
		ai_chance = {
			base = 0
		}
	}
}

#Goblins demand payment
goblin_loan.201 = {
	type = letter_event
	opening = {
		desc = call_ally.0100.opening
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = ask_for_time
				}
				desc = goblin_loan.201.second_time
			}
			desc = goblin_loan.201.opening
		}
	}
	sender = scope:recipient

	trigger = {
		exists = var:loan_amount_owed_goblins
		NOT = { has_character_flag = defend_four_years }
		exists = title:k_goblin_bankers.holder
	}

	immediate = {
		title:k_goblin_bankers.holder = {
			save_scope_as = recipient
		}
	}

	option = { #Pay back
		name = goblin_loan.201.a
		trigger = {
			can_execute_decision = repay_loan_goblin_decision
		}
		show_as_unavailable = { NOT = { can_execute_decision = repay_loan_goblin_decision } }
		flavor = { #To get warning if you don't have enough money
			triggered_desc = {
				trigger = {
					NOT = { can_execute_decision = repay_loan_goblin_decision }
				}
				desc = holy_order.0202.a._not.tt
			}
		}
		show_as_tooltip = {
			pay_short_term_gold = {
				gold = quarter_of_your_owe_plus_percent
				target = scope:recipient
			}
		}
		execute_decision = repay_loan_goblin_decision
		ai_chance = {
			base = 20
		}
	}

	option = { #Please give me more time?
		name = holy_order.0202.b_christian
		trigger = {
			prestige_level >= 2
			prestige >= 400
		}

		show_as_unavailable = { prestige_level < 2 }
		custom_tooltip = goblin_loan.201.b.tt
		add_character_flag = {
			flag = ask_for_time
			years = 6
		}
		add_prestige = -500

		ai_chance = {
			base = 20
			modifier = {
				add = 60
				is_at_war = yes
			}
		}
	}

	option = { #no
		name = holy_order.0202.d
		custom_tooltip = {
			text = every_vassal_not_repay_loan
			every_vassal = {
				limit = { primary_title = { tier >= tier_county } }
				add_opinion = {
					modifier = not_repay_loan_opinion
					target = root
				}
			}
		}

		if = {
			limit = {
				exists = title:e_trade_coalition.holder
			}
			title:e_trade_coalition.holder = { save_scope_as = my_title_claimer }
		}
		else_if = {
			limit = {
				any_independent_ruler = {
					has_faith = faith:cult_of_wealth
					is_landed = yes
				}
			}
			random_independent_ruler = {
				limit = { has_faith = faith:cult_of_wealth is_landed = yes }
				save_scope_as = my_title_claimer
			}
		}
		else = {
			title:k_goblin_bankers.holder = {
				save_scope_as = my_title_claimer
			}
		}
		if = {
			limit = {
				any_sub_realm_county = {
					always = yes
				}
			}
			random_sub_realm_county = {
				weight = {
					base = 1
					modifier = {
						add = 50
						is_coastal_county = yes
					}
					modifier = {
						add = 500
						is_neighbor_to_realm = scope:my_title_claimer
					}
				}
				save_scope_as = claimed_title
			}
		}
		if = {
			limit = {
				exists = scope:claimed_title
			}
			scope:my_title_claimer = {
				add_pressed_claim = scope:claimed_title
			}
		}

		scope:recipient = {
			add_opinion = {
				modifier = not_repay_loan_opinion
				target = root
			}
		}
		if = { #are we still of the same faith?
			limit = {
				scope:recipient.faith = root.faith
			}
			add_piety_level = -1
		}
		add_prestige_level = -2
		hidden_effect = {
			remove_variable = original_debtor
			remove_variable = loan_amount_owed_goblins
			remove_variable = loan_quarters_paid
			title:k_goblin_bankers = {
				remove_list_variable = {
					name = debtor_list
					target = root
				}
			}
			if = { limit = { has_character_flag = defend_four_years } remove_character_flag = defend_four_years }
			if = { limit = { has_character_flag = ask_for_time } remove_character_flag = ask_for_time }
		}
		add_character_flag = cannot_take_goblin_loans
		ai_chance = {
			base = 1
			modifier = {
				add = 5
				has_trait = greedy
			}
			modifier = {
				add = 4
				has_trait = deceitful
			}
		}
	}
	
	#after = { #Consequences for not paying back, this is vanilla, maybe i come up with something later
	#	hidden_effect = {
	#		random_list = {
	#			50 = {
	#				#They ask for a castle
	#			}
	#			50 = {
	#				#They ask for a child
	#			}
	#		}
	#	}
	#}
}